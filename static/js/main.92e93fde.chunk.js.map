{"version":3,"sources":["components/SearchBar.js","components/PokemonCard.js","components/SearchResultBoard.js","components/Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","isPokemonInPokedex","isPokemonFound","hasError","onConfirm","Fragment","className","onKeyDown","type","placeholder","PokemonCard","imageURL","name","onPokemonSave","abilities","alt","src","map","ability","description","uuidv4","onClick","SearchResultBoard","pokemons","pokemon","id","Pokedex","post","isPokedexOpen","onPokedexButtonClick","pokedex","App","handlePokedexButtonClick","setState","state","handlePokemonSave","pokemonName","currentPokemon","foundPokemons","filter","checkIfArrayIncludesObjectWithCertainKeyValue","savePokemonInPokedex","removePokemonFromView","array","keyValue","regex","RegExp","includes","i","length","match","test","pokemonToSave","prevState","pokemonToRemove","filteredPokemons","this","sortPokedex","sortedPokedex","sort","a","b","getPokemonTypes","types","typeNames","forEach","obj","toUpperCase","slice","indexOf","getPokemonAbilities","promiseArray","push","fetch","url","console","log","handleSearch","e","key","target","value","isFetchingData","searchedName","isPokemonInResultBoard","toLowerCase","then","response","json","data","Promise","all","responses","abilitiesArray","newPokemon","sprites","front_default","effect_entries","language","effect","catch","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6WAeeA,MAZf,SAAmBC,GAAO,IACfC,EAA2DD,EAA3DC,mBAAoBC,EAAuCF,EAAvCE,eAAgBC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,UACrD,OACI,eAAC,IAAMC,SAAP,WACA,uBAAOC,UAAU,aAAaC,UAAWH,EAAWI,KAAK,OAAOC,YAAY,oBAChE,IAAXN,EAAkB,mBAAGG,UAAU,gBAAb,uCAA6D,IAC9D,IAAjBJ,EAAwB,mBAAGI,UAAU,gBAAb,oDAA0E,IAC7E,IAArBL,EAA4B,mBAAGK,UAAU,gBAAb,uDAA6E,O,sBC2BnGI,MAjCf,SAAqBV,GAAQ,IACnBW,EAAkDX,EAAlDW,SAAUC,EAAwCZ,EAAxCY,KAAMJ,EAAkCR,EAAlCQ,KAAMK,EAA4Bb,EAA5Ba,cAAeC,EAAad,EAAbc,UAC7C,OACE,sBAAKR,UAAU,eAAf,UACE,qBAAKS,IAAKH,EAAMI,IAAKL,EAAUL,UAAU,sBACzC,mBAAGA,UAAU,qBAAb,SAAmCM,IACnC,mBAAGN,UAAU,qBAAb,SAAmCE,IACnC,qBAAIF,UAAU,0BAAd,sBAEGQ,EAAUG,KAAI,SAACC,GACd,OACE,qBAEEZ,UAAU,wBAFZ,UAIGY,EAAQN,KACT,mBAAGN,UAAU,oCAAb,SAAkDY,EAAQC,gBAJrDC,qBASb,wBACEC,QAAS,WACPR,EAAcD,IAEhBN,UAAU,4BAJZ,iCCRSgB,MAXf,SAA2BtB,GAAO,IACvBuB,EAA2BvB,EAA3BuB,SAAUV,EAAiBb,EAAjBa,cACjB,OACI,qBAAKP,UAAU,oBAAf,SACKiB,EAASN,KAAI,SAAAO,GACV,OAAO,cAAC,EAAD,CAAaX,cAAeA,EAAgCF,SAAUa,EAAQb,SAAUC,KAAMY,EAAQZ,KAAMJ,KAAMgB,EAAQhB,KAAMM,UAAWU,EAAQV,WAAnGU,EAAQC,U,MCgBhEC,ICnBXC,EDmBWD,EAxBf,SAAiB1B,GAAQ,IACf4B,EAAiD5B,EAAjD4B,cAAeC,EAAkC7B,EAAlC6B,qBAAsBC,EAAY9B,EAAZ8B,QAC7C,OACE,sBAAKxB,UAAS,kBAAasB,EAAgB,GAAK,mBAAhD,UACE,oBAAItB,UAAU,kBAAd,SAAiCsB,EAAgB,UAAY,KAC7D,oBAAItB,UAAU,gBAAd,SACGsB,EACGE,EAAQb,KAAI,SAACO,GACX,OACE,qBAAIlB,UAAU,qBAAd,cACIkB,EAAQC,GADZ,MACmBD,EAAQZ,OADaY,EAAQC,OAKpD,KAGN,wBAAQJ,QAASQ,EAAsBvB,UAAU,kBAAjD,SACGsB,EAAgB,IAAM,UCwMhBG,E,kDAnNb,aAAe,IAAD,8BACZ,gBAaFC,yBAA2B,WACzB,EAAKC,SAAS,CAAEL,eAAgB,EAAKM,MAAMN,iBAf/B,EAkBdO,kBAAoB,SAACC,GACnB,IAGMC,EAHmB,EAAKH,MAAMI,cAAcC,QAAO,SAACf,GACxD,OAAOA,EAAQZ,OAASwB,KAEc,GAGrC,EAAKI,8CACJ,EAAKN,MAAMJ,QACXO,EAAezB,QAGjB,EAAK6B,qBAAqBJ,GAC1B,EAAKK,sBAAsBL,KA/BjB,EAmCdG,8CAAgD,SAACG,EAAOC,GAGtD,IAFA,IAAMC,EAAQ,IAAIC,OAAJ,WAAeF,EAAf,KAA4B,KACtCG,GAAW,EACNC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAChC,GAAmC,OAA/BL,EAAMK,GAAGpC,KAAKsC,MAAML,IAAmBA,EAAMM,KAAKR,EAAMK,GAAGvB,IAAK,CAClEsB,GAAW,EACX,MAGJ,OAAOA,GA5CK,EA+CdN,qBAAuB,SAACW,GACtB,EAAKnB,UACH,SAACoB,GAAD,MAAgB,CAAEvB,QAAQ,GAAD,mBAAMuB,EAAUvB,SAAhB,CAAyBsB,QAClD,gBAlDU,EAwDdV,sBAAwB,SAACY,GACvB,IAAMC,EAAmB,EAAKrB,MAAMI,cAAcC,QAAO,SAACf,GACxD,OAAOA,EAAQZ,OAAS0C,EAAgB1C,QAE1C,EAAKqB,SAAS,CAAEK,cAAeiB,IAAoB,WAEjDC,KAAKC,kBA9DK,EAkEdA,YAAc,WACZ,IAAMC,EAAgB,EAAKxB,MAAMJ,QAAQ6B,MAAK,SAACC,EAAGC,GAChD,OAAOD,EAAEnC,GAAKoC,EAAEpC,MAElB,EAAKQ,SAAS,CAAEH,QAAS4B,KAtEb,EAyEdI,gBAAkB,SAACC,GACjB,IAAIC,EAAY,GAShB,OARAD,EAAME,SAAQ,SAACC,GACbF,EACEA,EAAYE,EAAI1D,KAAKI,KAAK,GAAGuD,cAAgBD,EAAI1D,KAAKI,KAAKwD,MAAM,GAC/DL,EAAMM,QAAQH,KAASH,EAAMd,OAAS,IACxCe,GAAa,QAIVA,GAnFK,EAsFdM,oBAAsB,SAACxD,GACrB,IAAMyD,EAAe,GAOrB,OALAzD,EAAUmD,SAAQ,SAACC,GACjBK,EAAaC,KAAKC,MAAMP,EAAIhD,QAAQwD,SAEtCC,QAAQC,IAAIL,GAELA,GA9FK,EAiGdM,aAAe,SAACC,GACd,GAAc,UAAVA,EAAEC,KAAsC,KAAnBD,EAAEE,OAAOC,QAA6C,IAA7B,EAAK/C,MAAMgD,eAA7D,CACA,IAAMC,EAAeL,EAAEE,OAAOC,MACxBhF,EAAqB,EAAKuC,8CAC9B,EAAKN,MAAMJ,QACXqD,GAEIC,EAAyB,EAAK5C,8CAClC,EAAKN,MAAMI,cACX6C,IAGyB,IAAvBlF,IAA2D,IAA3BmF,GAClC,EAAKnD,SAAS,CAACiD,gBAAgB,IAC/BT,MAAM,qCAAD,OAAsCK,EAAEE,OAAOC,MAAMI,gBACvDC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAGL,OAFA9D,EAAO8D,EAEAC,QAAQC,IAAI,EAAKrB,oBAAoBmB,EAAK3E,eAElDwE,MAAK,SAACM,GACL,OAAOF,QAAQC,IACbC,EAAU3E,KAAI,SAAUsE,GACtB,OAAOA,EAASC,cAIrBF,MAAK,SAACG,GACL,IAAMI,EAAiB,GAEjBC,EAAa,CACjBrE,GAAIE,EAAKF,GACTb,KAAMe,EAAKf,KAAK,GAAGuD,cAAgBxC,EAAKf,KAAKwD,MAAM,GACnD5D,KAAM,EAAKsD,gBAAgBnC,EAAKoC,OAChCpD,SAAUgB,EAAKoE,QAAQC,eAEzBP,EAAKxB,SAAQ,SAACC,GAGZ,IAFA,IAAMtD,EAAOsD,EAAItD,KACbO,EAAc,GACT6B,EAAI,EAAGA,EAAIkB,EAAI+B,eAAehD,OAAQD,IAC7C,GAA4C,OAAxCkB,EAAI+B,eAAejD,GAAGkD,SAAStF,KAAe,CAChDO,EAAc+C,EAAI+B,eAAejD,GAAGmD,OACpC,MAGJ,IAAMjF,EAAU,CAAEN,OAAMO,eACxB0E,EAAerB,KAAKtD,MAEtB4E,EAAWhF,UAAY+E,EAEvBlB,QAAQC,IAAIa,GACZ,EAAKxD,UAAS,SAACoB,GAAD,MAAgB,CAC5Bf,cAAc,GAAD,mBAAMe,EAAUf,eAAhB,CAA+BwD,QAE9C,EAAK7D,SAAS,CAACiD,gBAAgB,IAC/B,EAAKjD,SAAS,CAAE9B,UAAU,IAC1B,EAAK8B,SAAS,CAAE/B,gBAAgB,IAChC,EAAK+B,SAAS,CAAEhC,oBAAoB,OAErCmG,OAAM,kBACL,EAAKnE,SAAS,CACZiD,gBAAgB,EAChB/E,UAAU,EACVD,gBAAgB,EAChBD,oBAAoB,OAG1B6E,EAAEE,OAAOC,MAAQ,IAEbhF,EACF,EAAKgC,SAAS,CACZhC,oBAAoB,EACpBE,UAAU,EACVD,gBAAgB,IAGlB,EAAK+B,SAAS,CACZ/B,gBAAgB,EAChBC,UAAU,EACVF,oBAAoB,MAjL1B,EAAKiC,MAAQ,CACXI,cAAe,GACfR,QAAS,GACT3B,UAAU,EACVD,gBAAgB,EAChBD,oBAAoB,EACpB2B,eAAe,EACfsD,gBAAgB,GATN,E,qDA0LZ,OACE,sBAAK5E,UAAU,MAAf,UACE,cAAC,EAAD,CACEsB,cAAe4B,KAAKtB,MAAMN,cAC1BC,qBAAsB2B,KAAKxB,yBAC3BF,QAAS0B,KAAKtB,MAAMJ,QACpBxB,UAAU,2BAEZ,sBAAKA,UAAU,mCAAf,UACE,cAAC,EAAD,CACEJ,eAAgBsD,KAAKtB,MAAMhC,eAC3BD,mBAAoBuD,KAAKtB,MAAMjC,mBAC/BE,SAAUqD,KAAKtB,MAAM/B,SACrBC,UAAWoD,KAAKqB,eAElB,cAAC,EAAD,CACEtD,SAAUiC,KAAKtB,MAAMI,cACrBzB,cAAe2C,KAAKrB,8B,GA5MdkE,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92e93fde.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../styles/SearchBar.css';\r\n\r\nfunction SearchBar(props){\r\n    const {isPokemonInPokedex, isPokemonFound, hasError, onConfirm} = props;\r\n    return(\r\n        <React.Fragment>\r\n        <input className=\"search-bar\" onKeyDown={onConfirm} type=\"text\" placeholder=\"Find them all!\"/> \r\n        {hasError===true ? <p className=\"error-message\">There is no such pokemon!</p> : \"\" }\r\n        {isPokemonFound===true ? <p className=\"error-message\">You already have this pokemon in view!</p> : \"\" }\r\n        {isPokemonInPokedex===true ? <p className=\"error-message\">You already have this pokemon in pokedex!</p> : \"\" }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport \"../styles/PokemonCard.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction PokemonCard(props) {\r\n  const { imageURL, name, type, onPokemonSave, abilities} = props;\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <img alt={name} src={imageURL} className=\"pokemon-card__img\"></img>\r\n      <p className=\"pokemon-card__name\">{name}</p>\r\n      <p className=\"pokemon-card__type\">{type}</p>\r\n      <ul className=\"pokemon-card__abilities\">\r\n        Abilities\r\n        {abilities.map((ability) => {\r\n          return (\r\n            <li\r\n              key={uuidv4()}\r\n              className=\"pokemon-card__ability\"\r\n            >\r\n              {ability.name}\r\n              <p className=\"pokemon-card__ability-description\">{ability.description}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button\r\n        onClick={() => {\r\n          onPokemonSave(name);\r\n        }}\r\n        className=\"pokemon-card__save-button\"\r\n      >\r\n        Save in pokedex\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;\r\n","import '../styles/SearchResultBoard.css';\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\nimport React from \"react\"\r\n\r\n\r\nfunction SearchResultBoard(props){\r\n    const {pokemons, onPokemonSave} = props;\r\n    return(\r\n        <div className=\"SearchResultBoard\">\r\n            {pokemons.map(pokemon=>{\r\n                return <PokemonCard onPokemonSave={onPokemonSave} key={pokemon.id} imageURL={pokemon.imageURL} name={pokemon.name} type={pokemon.type} abilities={pokemon.abilities}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResultBoard;","import React from \"react\";\r\nimport \"../styles/Pokedex.css\";\r\n\r\nfunction Pokedex(props) {\r\n  const { isPokedexOpen, onPokedexButtonClick, pokedex } = props;\r\n  return (\r\n    <div className={`Pokedex ${isPokedexOpen ? \"\" : \"Pokedex--hidden\"}`}>\r\n      <h2 className=\"Pokedex__header\">{isPokedexOpen ? \"Pokedex\" : \"\"}</h2>\r\n      <ul className=\"Pokedex__list\">\r\n        {isPokedexOpen\r\n          ? pokedex.map((pokemon) => {\r\n              return (\r\n                <li className=\"Pokedex__list-item\" key={pokemon.id}>\r\n                  #{pokemon.id} - {pokemon.name}\r\n                </li>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </ul>\r\n\r\n      <button onClick={onPokedexButtonClick} className=\"Pokedex__button\">\r\n        {isPokedexOpen ? \"<\" : \">\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pokedex;\r\n","import \"./styles/SearchModule.css\";\r\nimport \"./App.css\";\r\n\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport React from \"react\";\r\nimport SearchResultBoard from \"./components/SearchResultBoard\";\r\nimport Pokedex from \"./components/Pokedex\";\r\n\r\nlet post;\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      foundPokemons: [],\r\n      pokedex: [],\r\n      hasError: false,\r\n      isPokemonFound: false,\r\n      isPokemonInPokedex: false,\r\n      isPokedexOpen: false,\r\n      isFetchingData: false\r\n    };\r\n  }\r\n\r\n\r\n  handlePokedexButtonClick = () => {\r\n    this.setState({ isPokedexOpen: !this.state.isPokedexOpen });\r\n  };\r\n\r\n  handlePokemonSave = (pokemonName) => {\r\n    const filteredPokemons = this.state.foundPokemons.filter((pokemon) => {\r\n      return pokemon.name === pokemonName;\r\n    });\r\n    const currentPokemon = filteredPokemons[0];\r\n\r\n    if (\r\n      !this.checkIfArrayIncludesObjectWithCertainKeyValue(\r\n        this.state.pokedex,\r\n        currentPokemon.name\r\n      )\r\n    ) {\r\n      this.savePokemonInPokedex(currentPokemon);\r\n      this.removePokemonFromView(currentPokemon);\r\n    }\r\n  };\r\n\r\n  checkIfArrayIncludesObjectWithCertainKeyValue = (array, keyValue) => {\r\n    const regex = new RegExp(`^${keyValue}$`, \"i\");\r\n    let includes = false;\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (array[i].name.match(regex) !== null || regex.test(array[i].id)) {\r\n        includes = true;\r\n        break;\r\n      }\r\n    }\r\n    return includes;\r\n  };\r\n\r\n  savePokemonInPokedex = (pokemonToSave) => {\r\n    this.setState(\r\n      (prevState) => ({ pokedex: [...prevState.pokedex, pokemonToSave] }),\r\n      function () {\r\n        // console.log(`Pokedex`, this.state.pokedex);\r\n      }\r\n    );\r\n  };\r\n\r\n  removePokemonFromView = (pokemonToRemove) => {\r\n    const filteredPokemons = this.state.foundPokemons.filter((pokemon) => {\r\n      return pokemon.name !== pokemonToRemove.name;\r\n    });\r\n    this.setState({ foundPokemons: filteredPokemons }, function () {\r\n      // console.log(`Found Pokemons`, this.state.foundPokemons);\r\n      this.sortPokedex();\r\n    });\r\n  };\r\n\r\n  sortPokedex = () => {\r\n    const sortedPokedex = this.state.pokedex.sort((a, b) => {\r\n      return a.id - b.id;\r\n    });\r\n    this.setState({ pokedex: sortedPokedex });\r\n  };\r\n\r\n  getPokemonTypes = (types) => {\r\n    let typeNames = \"\";\r\n    types.forEach((obj) => {\r\n      typeNames =\r\n        typeNames + obj.type.name[0].toUpperCase() + obj.type.name.slice(1);\r\n      if (types.indexOf(obj) !== types.length - 1) {\r\n        typeNames += \"/\";\r\n      }\r\n    });\r\n\r\n    return typeNames;\r\n  };\r\n\r\n  getPokemonAbilities = (abilities) => {\r\n    const promiseArray = [];\r\n\r\n    abilities.forEach((obj) => {\r\n      promiseArray.push(fetch(obj.ability.url));\r\n    });\r\n    console.log(promiseArray);\r\n\r\n    return promiseArray;\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    if (e.key !== \"Enter\" || e.target.value === \"\" || this.state.isFetchingData=== true) return;\r\n    const searchedName = e.target.value;\r\n    const isPokemonInPokedex = this.checkIfArrayIncludesObjectWithCertainKeyValue(\r\n      this.state.pokedex,\r\n      searchedName\r\n    );\r\n    const isPokemonInResultBoard = this.checkIfArrayIncludesObjectWithCertainKeyValue(\r\n      this.state.foundPokemons,\r\n      searchedName\r\n    );\r\n\r\n    if (isPokemonInPokedex === false && isPokemonInResultBoard === false) {\r\n      this.setState({isFetchingData: true})\r\n      fetch(`https://pokeapi.co/api/v2/pokemon/${e.target.value.toLowerCase()}`)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          post = data;\r\n\r\n          return Promise.all(this.getPokemonAbilities(data.abilities));\r\n        })\r\n        .then((responses) => {\r\n          return Promise.all(\r\n            responses.map(function (response) {\r\n              return response.json();\r\n            })\r\n          );\r\n        })\r\n        .then((data) => {\r\n          const abilitiesArray = [];\r\n\r\n          const newPokemon = {\r\n            id: post.id,\r\n            name: post.name[0].toUpperCase() + post.name.slice(1),\r\n            type: this.getPokemonTypes(post.types),\r\n            imageURL: post.sprites.front_default,\r\n          };\r\n          data.forEach((obj) => {\r\n            const name = obj.name;\r\n            let description = \"\";\r\n            for (let i = 0; i < obj.effect_entries.length; i++) {\r\n              if (obj.effect_entries[i].language.name === \"en\") {\r\n                description = obj.effect_entries[i].effect;\r\n                break;\r\n              }\r\n            }\r\n            const ability = { name, description };\r\n            abilitiesArray.push(ability);\r\n          });\r\n          newPokemon.abilities = abilitiesArray;\r\n\r\n          console.log(data);\r\n          this.setState((prevState) => ({\r\n            foundPokemons: [...prevState.foundPokemons, newPokemon],\r\n          }));\r\n          this.setState({isFetchingData: false})\r\n          this.setState({ hasError: false });\r\n          this.setState({ isPokemonFound: false });\r\n          this.setState({ isPokemonInPokedex: false });\r\n        })\r\n        .catch(() =>\r\n          this.setState({\r\n            isFetchingData: false,\r\n            hasError: true,\r\n            isPokemonFound: false,\r\n            isPokemonInPokedex: false,\r\n          })\r\n        );\r\n      e.target.value = \"\";\r\n    } else {\r\n      if (isPokemonInPokedex) {\r\n        this.setState({\r\n          isPokemonInPokedex: true,\r\n          hasError: false,\r\n          isPokemonFound: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isPokemonFound: true,\r\n          hasError: false,\r\n          isPokemonInPokedex: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Pokedex\r\n          isPokedexOpen={this.state.isPokedexOpen}\r\n          onPokedexButtonClick={this.handlePokedexButtonClick}\r\n          pokedex={this.state.pokedex}\r\n          className=\"Pokedex Pokedex--small\"\r\n        />\r\n        <div className=\"SearchModule SearchModule--large\">\r\n          <SearchBar\r\n            isPokemonFound={this.state.isPokemonFound}\r\n            isPokemonInPokedex={this.state.isPokemonInPokedex}\r\n            hasError={this.state.hasError}\r\n            onConfirm={this.handleSearch}\r\n          />\r\n          <SearchResultBoard\r\n            pokemons={this.state.foundPokemons}\r\n            onPokemonSave={this.handlePokemonSave}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}